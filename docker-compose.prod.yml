version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: blog-backend-prod
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/blog.db
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=production
    volumes:
      - blog-data:/app/data
    networks:
      - blog-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - blog-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse proxy (optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: blog-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - blog-network
    restart: unless-stopped

networks:
  blog-network:
    driver: bridge

volumes:
  blog-data:
    driver: local