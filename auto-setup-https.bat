@echo off
setlocal enabledelayedexpansion

echo ========================================
echo   Automatic HTTPS Backend Setup
echo ========================================
echo.

echo [1/5] Getting your ECS backend IP...
call get-ecs-ip.bat >temp_ip.txt 2>&1

REM Extract IP from the output
for /f "tokens=*" %%i in ('aws ecs list-tasks --cluster blog-backend-cluster --service-name blog-backend-service --query "taskArns[0]" --output text --region us-east-1') do set TASK_ARN=%%i

if "%TASK_ARN%"=="None" (
    echo ✗ No running ECS tasks found
    echo Please make sure your ECS service is running first
    echo Run: fix-ecs-logs.bat
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('aws ecs describe-tasks --cluster blog-backend-cluster --tasks %TASK_ARN% --query "tasks[0].attachments[0].details[?name==`networkInterfaceId`].value" --output text --region us-east-1') do set NETWORK_INTERFACE_ID=%%i

for /f "tokens=*" %%i in ('aws ec2 describe-network-interfaces --network-interface-ids %NETWORK_INTERFACE_ID% --query "NetworkInterfaces[0].Association.PublicIp" --output text --region us-east-1') do set ECS_IP=%%i

if "%ECS_IP%"=="None" (
    echo ✗ Could not get ECS public IP
    pause
    exit /b 1
)

echo ✓ Found ECS IP: %ECS_IP%

echo.
echo [2/5] Testing cloudflared installation...
set CLOUDFLARED_PATH=C:\Users\user\Downloads\cloudflared-windows-amd64.exe

if not exist "%CLOUDFLARED_PATH%" (
    echo ✗ cloudflared not found at %CLOUDFLARED_PATH%
    echo Please check the path to your cloudflared executable
    pause
    exit /b 1
)

echo ✓ cloudflared found at %CLOUDFLARED_PATH%

echo.
echo [3/5] Creating tunnel configuration...
echo # Cloudflare Tunnel Config > tunnel-config.txt
echo Backend IP: %ECS_IP% >> tunnel-config.txt
echo Backend URL: http://%ECS_IP%:8000 >> tunnel-config.txt

echo.
echo [4/5] Starting Cloudflare Tunnel...
echo.
echo ========================================
echo   TUNNEL STARTING - PLEASE WAIT
echo ========================================
echo.
echo Looking for the HTTPS URL...
echo This may take 10-15 seconds...
echo.

REM Start tunnel in background and capture output
start /b "%CLOUDFLARED_PATH%" tunnel --url http://%ECS_IP%:8000 > tunnel-output.txt 2>&1

REM Wait for tunnel to start and find the URL
set TUNNEL_URL=
set COUNTER=0

:wait_for_tunnel
timeout /t 2 /nobreak >nul
set /a COUNTER+=1

REM Look for the HTTPS URL in the output
for /f "tokens=*" %%i in ('findstr "https://" tunnel-output.txt 2^>nul') do (
    set LINE=%%i
    for /f "tokens=*" %%j in ('echo !LINE! ^| findstr /r "https://[a-zA-Z0-9.-]*\.trycloudflare\.com"') do (
        for /f "tokens=2 delims=|" %%k in ("%%j") do (
            set TEMP_URL=%%k
            set TUNNEL_URL=!TEMP_URL: =!
        )
    )
)

if defined TUNNEL_URL (
    goto tunnel_found
)

if %COUNTER% lss 15 (
    echo Still waiting... (%COUNTER%/15)
    goto wait_for_tunnel
)

echo ✗ Could not find tunnel URL automatically
echo Please check tunnel-output.txt for the HTTPS URL
pause
exit /b 1

:tunnel_found
echo.
echo ========================================
echo   TUNNEL READY! 🎉
echo ========================================
echo.
echo ✓ Your HTTPS Backend URL: %TUNNEL_URL%
echo.

echo [5/5] Updating frontend configuration...

REM Update vercel-config.js
echo // Configuration for Vercel deployment > frontend\vercel-config.js
echo // Auto-generated by auto-setup-https.bat >> frontend\vercel-config.js
echo. >> frontend\vercel-config.js
echo export const BACKEND_CONFIG = { >> frontend\vercel-config.js
echo   // Your HTTPS backend URL via Cloudflare Tunnel >> frontend\vercel-config.js
echo   BACKEND_URL: '%TUNNEL_URL%', >> frontend\vercel-config.js
echo }; >> frontend\vercel-config.js
echo. >> frontend\vercel-config.js
echo export default BACKEND_CONFIG; >> frontend\vercel-config.js

echo ✓ Updated frontend/vercel-config.js

REM Update .env.production
echo # Production Frontend Environment > frontend\.env.production
echo VITE_API_BASE_URL=%TUNNEL_URL% >> frontend\.env.production

echo ✓ Updated frontend/.env.production

echo.
echo ========================================
echo   SETUP COMPLETE! 🚀
echo ========================================
echo.
echo ✅ Backend HTTPS URL: %TUNNEL_URL%
echo ✅ Frontend config updated
echo ✅ Ready to deploy to Vercel!
echo.
echo Next steps:
echo 1. Push your code to GitHub
echo 2. Vercel will auto-deploy
echo 3. Your app will work without mixed content errors!
echo.
echo ⚠️  IMPORTANT: Keep this command prompt open!
echo    The tunnel runs as long as this window is open.
echo    Press Ctrl+C to stop the tunnel.
echo.
echo Your tunnel is running at: %TUNNEL_URL%
echo.

REM Keep the script running to maintain the tunnel
echo Press any key to stop the tunnel...
pause >nul

REM Clean up
taskkill /f /im cloudflared-windows-amd64.exe >nul 2>&1
del tunnel-output.txt >nul 2>&1
del temp_ip.txt >nul 2>&1

echo Tunnel stopped.